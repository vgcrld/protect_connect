#!/usr/bin/env ruby

require 'tsm'
require 'awesome_print'
require 'logger'
require 'fileutils'
require 'optimist'

# Options
opts = Optimist::options do

  opt :stanza, "TSM dsm.sys stanza",
        type: :string,
    required: true

  opt :samples,  "No. of Samples",
       type: :integer,
    default: 1

  opt :interval, "Interval Size (Sec)",
       type: :integer,
    default: 300

  opt :commands, "Commands to Run each interval",
       type: :strings,
    default: Tsm::COMMANDS

  opt :outdir, "Output Directory",
       type: :string,
    default: '/tmp/protect_collect'

end

# Setup
STANZA   = opts[:stanza]
SAMPLES  = opts[:samples]
INTERVAL = opts[:interval]
CMDS     = opts[:commands]

# Setup
log = Logger.new(STDOUT)
srv = Tsm::Server.new(STANZA)

# Where to put this
OUTDIR = "#{opts[:outdir]}/#{srv.name}-#{srv.uuid}"
FileUtils.mkdir_p(OUTDIR)

1.upto(SAMPLES) do |i|

  log.info "Start loop #{i}/#{SAMPLES}."
  output = []
  CMDS.each do |c|
    log.info "Get command: #{c}"
    output << srv.exec(c)
  end
  log.info "Finished loop #{i}/#{SAMPLES}."

  # Loop each TsmCmd and write it out
  output.each do |o|
    out = File.new("#{OUTDIR}/#{o.name}_#{o.ts}.json",'w')
    log.info "Writing output file #{out.path}"
    out << o.to_json
    out.close
  end

  # Sleep unless we are done
  unless i == SAMPLES
    log.info "Sleeping for #{INTERVAL}"
    sleep INTERVAL
  end

end

# All done
log.info "Finished, closing connection."
srv.close
