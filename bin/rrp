#!/usr/bin/env ruby

require 'awesome_print'
require 'protect_connect'

results = []

servers = {
       gem: ProtectConnect::Server.new('gem'),
  protect1: ProtectConnect::Server.new('protect1')
}

commands = {
   
    #
    # Config Data
    #
                db: 'q db f=d',
           dbspace: 'q dbspace f=d',
               log: 'q log f=d',
             nodes: 'q node f=d',
            domain: 'q do f=d',
         policyset: 'q pol f=d',
         mgmtclass: 'q mg f=d',
       bucopygroup: 'q copy f=d t=b',
       arcopygroup: 'q copy f=d t=a',
          devclass: 'q dev f=d',
           stgpool: 'q stgpool f=d',
           library: 'q library f=d',
             drive: 'q drive f=d',
            volume: 'q vol f=d',
         libvolume: 'q libv f=d',
              path: 'q paths f=d',
               san: 'q san f=d',
          schedule: 'q sched f=d',
     adminschedule: 'q sched t=a f=d',
         occupancy: 'q occ',
         filespace: 'q file f=d',
    #
    # Incremental Data - Candidates for incremental extract
    #
           summary: 'select * from summary',
        volhistory: 'select * from volhistory',
       adminevents: 'q ev * t=a begind=-2 endd=today begint=now endt=now',
      clientevents: 'q ev * * begind=-2 endd=today begint=now endt=now',
            actlog: 'select * from actlog where date_time>=current_timestamp-(1)day',
}

servers.each do |stanza,server|
  puts "Collect for: #{stanza}"
  dir = "/Users/rdavis/Downloads/tsmdata/#{stanza}"
  FileUtils.remove_dir(dir,force=true)
  FileUtils.mkdir_p(dir)
  commands.each do |key,command|
  puts "  Command: #{command}"
    out = server.exec(command).to_csv.to_csv
    file = "#{dir}/#{key}.csv"
    File.open(file,'w+'){ |f| f << out }
  end
end


